[{"/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/index.js":"1","/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/App.js":"2","/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/components/Note.js":"3","/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/services/notes.js":"4"},{"size":118,"mtime":1610877315000,"results":"5","hashOfConfig":"6"},{"size":2573,"mtime":1644735970319,"results":"7","hashOfConfig":"6"},{"size":794,"mtime":1644736029909,"results":"8","hashOfConfig":"6"},{"size":494,"mtime":1644736282925,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"h1jmi6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/index.js",[],["22","23"],"/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/App.js",["24","25","26","27","28"],"import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Button } from '@mui/material';\nimport './App.css'\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n\n  \n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important==true)\n\n  return (\n    <div className=\"maindiv\">\n      <h1 align='center'> Note :: Drop ðŸ’§ </h1>\n\n      <div>\n        <Button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </Button>\n      </div>\n      <List>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </List>\n      <form onSubmit={addNote} align=\"center\">\n        <input value={newNote} onChange={handleNoteChange} />\n        <br></br>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{ marginTop: 3, backgroundColor: \"#04b1d4\" }}\n        >\n          SUBMIT\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default App","/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/components/Note.js",["29","30"],"import React from 'react'\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Button } from '@mui/material';\n\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n\n\n<ListItem>\n<ListItemButton sx={{bgcolor:'#e0f2ff'}}>\n  <ListItemIcon>\n  </ListItemIcon>\n  <ListItemText primary={note.content} />\n  <Button variant=\"contained\" color=\"success\" onClick={toggleImportance} sx={{backgroundColor:'#04b1d4'}}>\n        Change Importance\n  </Button>\n</ListItemButton>\n</ListItem>\n\n  )\n}\n\nexport default Note","/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part2/notes/src/services/notes.js",["31"],"import axios from 'axios'\nconst baseUrl = '/api/notes'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update\n}\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":20},{"ruleId":"36","severity":1,"message":"42","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":69,"column":40,"nodeType":"45","messageId":"46","endLine":69,"endColumn":42},{"ruleId":"36","severity":1,"message":"47","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":12},{"ruleId":"36","severity":1,"message":"48","line":12,"column":9,"nodeType":"38","messageId":"39","endLine":12,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":22,"column":1,"nodeType":"51","endLine":24,"endColumn":2},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'List' is defined but never used.","'label' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]