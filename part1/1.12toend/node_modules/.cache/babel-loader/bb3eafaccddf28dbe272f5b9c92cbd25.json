{"ast":null,"code":"var _jsxFileName = \"/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part1/1.6to1.14/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleclick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [props.text, \"          \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  if (props.good + props.bad + props.neutral == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Feedback Given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"all \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", props.good + props.bad + props.neutral, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"average  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", (props.good - props.bad) / (props.good + props.bad + props.neutral), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \" percentage \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"  \", props.good * 100 / (props.good + props.bad + props.neutral), \" % \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increasegood = () => {\n    setGood(good + 1);\n  };\n\n  const increasebad = () => {\n    setBad(bad + 1);\n  };\n\n  const increasenut = () => {\n    setNeutral(neutral + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"      Give Feedback    \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasegood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasenut,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasebad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part1/1.6to1.14/src/App.js"],"names":["React","useState","Button","props","handleclick","text","StatisticLine","value","Statistics","good","bad","neutral","App","setGood","setNeutral","setBad","increasegood","increasebad","increasenut"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMH,M;;AASN,MAAMI,aAAa,GAAIH,KAAD,IAAW;AAE7B,sBACE;AAAA,2BACE;AAAA,6BACE;AAAA,mBACCA,KAAK,CAACE,IADP,gBACuBF,KAAK,CAACI,KAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH,CAbD;;MAAMD,a;;AAiBN,MAAME,UAAU,GAAIL,KAAD,IAAW;AAE5B,MAAGA,KAAK,CAACM,IAAN,GAAWN,KAAK,CAACO,GAAjB,GAAqBP,KAAK,CAACQ,OAA3B,IAAoC,CAAvC,EAAyC;AACvC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAGD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAGR,KAAK,CAACM;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAGN,KAAK,CAACQ;AAA5C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,KAApB;AAA0B,MAAA,KAAK,EAAGR,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA,8BACA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,qBACe;AAAA,0BAAMP,KAAK,CAACM,IAAN,GAAWN,KAAK,CAACO,GAAjB,GAAqBP,KAAK,CAACQ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,qBACoB;AAAA,0BAAM,CAACR,KAAK,CAACM,IAAN,GAAWN,KAAK,CAACO,GAAlB,KAAwBP,KAAK,CAACM,IAAN,GAAWN,KAAK,CAACO,GAAjB,GAAqBP,KAAK,CAACQ,OAAnD,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAOA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,qBACuB;AAAA,2BAAOR,KAAK,CAACM,IAAN,GAAW,GAAX,IAAgBN,KAAK,CAACM,IAAN,GAAWN,KAAK,CAACO,GAAjB,GAAqBP,KAAK,CAACQ,OAA3C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxCD;;MAAMH,U;;AA2CN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUG,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMK,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;;AAIA,QAAMe,YAAY,GAAG,MAAM;AAACH,IAAAA,OAAO,CAACJ,IAAI,GAAC,CAAN,CAAP;AAAgB,GAA5C;;AACA,QAAMQ,WAAW,GAAG,MAAM;AAACF,IAAAA,MAAM,CAACL,GAAG,GAAC,CAAL,CAAN;AAAc,GAAzC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AAACJ,IAAAA,UAAU,CAACH,OAAO,GAAC,CAAT,CAAV;AAAsB,GAAjD;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEK,YADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEE,WADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YATF,eAaE,QAAC,MAAD;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF,eAmBG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAER,IAAlB;AAAwB,MAAA,GAAG,EAAEC,GAA7B;AAAkC,MAAA,OAAO,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAnBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApCD;;GAAMC,G;;MAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["\nimport React, { useState } from 'react'\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleclick}>\n      {props.text}\n    </button>\n  )\n}\n\n\nconst StatisticLine = (props) => {\n\n    return(\n      <div>\n        <table> \n          <tr>\n          {props.text}          {props.value}\n          </tr>\n       \n        </table>\n       </div>\n    )\n\n}\n\n\n\nconst Statistics = (props) => {\n\n  if(props.good+props.bad+props.neutral==0){\n    return(\n      <div>\n        No Feedback Given\n      </div>\n    )\n  }\n\n\n  return(\n    <div>\n      <h2>Statistics</h2>\n      \n\n      <StatisticLine text=\"good\" value ={props.good} />\n      <StatisticLine text=\"neutral\" value ={props.neutral} />\n      <StatisticLine text=\"bad\" value ={props.bad} />\n\n      <table>\n      <tr>\n      <td>all </td>  <td> {props.good+props.bad+props.neutral} </td>\n      </tr>\n      <tr>\n      <td>average  </td>  <td> {(props.good-props.bad)/(props.good+props.bad+props.neutral)} </td>\n      </tr>\n      <tr>\n      <td> percentage </td>  <td>  {props.good*100/(props.good+props.bad+props.neutral)} % </td>\n      </tr>\n\n    \n\n\n      </table>\n\n\n\n    </div>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n\n\n  const increasegood = () => {setGood(good+1)}\n  const increasebad = () => {setBad(bad+1)}\n  const increasenut = () => {setNeutral(neutral+1)}\n\n\n  return (\n    <div>\n      <h2>      Give Feedback    </h2>\n      <br></br>\n\n\n      <Button\n        handleclick={increasegood}\n        text='good'\n      />\n      <Button\n        handleclick={increasenut}\n        text='neutral'\n      />\n      <Button\n        handleclick={increasebad}\n        text='bad'\n      />\n      <br></br>\n\n       <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}