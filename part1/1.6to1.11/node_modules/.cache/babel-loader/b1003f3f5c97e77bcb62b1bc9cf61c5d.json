{"ast":null,"code":"var _jsxFileName = \"/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part1/1.6to1.14/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleclick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Statistics\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \"good \", good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \"neutral \", neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \"bad \", bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \"all \", good + bad + neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \"average \", (good - bad) / (good + bad + neutral), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \"percentage \", good * 100 / (good + bad + neutral), \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increasegood = () => {\n    setGood(good + 1);\n  };\n\n  const increasebad = () => {\n    setBad(bad + 1);\n  };\n\n  const increasenut = () => {\n    setNeutral(neutral + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Give Feedback\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasegood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasenut,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleclick: increasebad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/joy/Codes/Full Stack Course/Exercises/fullstackopen_course/part1/1.6to1.14/src/App.js"],"names":["React","useState","Button","props","handleclick","text","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","increasegood","increasebad","increasenut"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMH,M;;AASN,MAAMI,UAAU,GAAIH,KAAD,IAAW;AAE5B,sBACE;AAAA,0CAEE;AAAA;AAAA;AAAA;AAAA,YAFF,WAGQI,IAHR,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,cAKWC,OALX,eAME;AAAA;AAAA;AAAA;AAAA,YANF,UAOOC,GAPP,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,UASOF,IAAI,GAACE,GAAL,GAASD,OAThB,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,cAYW,CAACD,IAAI,GAACE,GAAN,KAAYF,IAAI,GAACE,GAAL,GAASD,OAArB,CAZX,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,iBAccD,IAAI,GAAC,GAAL,IAAUA,IAAI,GAACE,GAAL,GAASD,OAAnB,CAdd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArBD;;MAAMF,U;;AAwBN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUI,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMI,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAIA,QAAMa,YAAY,GAAG,MAAM;AAACH,IAAAA,OAAO,CAACJ,IAAI,GAAC,CAAN,CAAP;AAAgB,GAA5C;;AACA,QAAMQ,WAAW,GAAG,MAAM;AAACF,IAAAA,MAAM,CAACJ,GAAG,GAAC,CAAL,CAAN;AAAc,GAAzC;;AACA,QAAMO,WAAW,GAAG,MAAM;AAACJ,IAAAA,UAAU,CAACJ,OAAO,GAAC,CAAT,CAAV;AAAsB,GAAjD;;AAGA,sBACE;AAAA,6CAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEM,YADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEE,WADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YATF,eAaE,QAAC,MAAD;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApCD;;GAAML,G;;MAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["\nimport React, { useState } from 'react'\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleclick}>\n      {props.text}\n    </button>\n  )\n}\n\n\nconst Statistics = (props) => {\n\n  return(\n    <div>\n            Statistics\n      <br></br>\n      good {good}\n      <br></br>\n      neutral {neutral}\n      <br></br>\n      bad {bad}\n      <br></br>\n      all {good+bad+neutral}\n      \n      <br></br>\n      average {(good-bad)/(good+bad+neutral)}\n      <br></br>\n      percentage {good*100/(good+bad+neutral)} %\n\n    </div>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n\n\n  const increasegood = () => {setGood(good+1)}\n  const increasebad = () => {setBad(bad+1)}\n  const increasenut = () => {setNeutral(neutral+1)}\n\n\n  return (\n    <div>\n      Give Feedback\n      <br></br>\n\n\n      <Button\n        handleclick={increasegood}\n        text='good'\n      />\n      <Button\n        handleclick={increasenut}\n        text='neutral'\n      />\n      <Button\n        handleclick={increasebad}\n        text='bad'\n      />\n      <br></br>\n\n       \n    </div>\n  )\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}